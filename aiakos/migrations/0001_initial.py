# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-27 17:05
from __future__ import unicode_literals

import uuid

import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models

import django_extauth.user
import django_modular_user.user_base


class Migration(migrations.Migration):

	initial = True

	dependencies = [
		('auth', '0008_alter_user_username_max_length'),
	]

	operations = [
		migrations.CreateModel(
			name='User',
			fields=[
				('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
				('address_formatted', models.TextField(blank=True, verbose_name='formatted address')),
				('address_street', models.CharField(blank=True, max_length=200, verbose_name='street')),
				('address_locality', models.CharField(blank=True, max_length=200, verbose_name='locality')),
				('address_region', models.CharField(blank=True, max_length=200, verbose_name='region')),
				('address_postal_code', models.CharField(blank=True, max_length=50, verbose_name='postal code')),
				('address_country', models.CharField(blank=True, max_length=50, verbose_name='country')),
				('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
				('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
				('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
				('name', models.CharField(blank=True, max_length=200, verbose_name='full name')),
				('nickname', models.CharField(blank=True, max_length=200, verbose_name='nickname')),
				('password', models.CharField(max_length=128, verbose_name='password')),
				('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
				('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
				('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
				('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
				('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
			],
			options={
				'verbose_name': 'user',
				'verbose_name_plural': 'users',
				'abstract': False,
			},
			bases=(django_extauth.user.UserMixin, models.Model),
			managers=[
				('objects', django_modular_user.user_base.UserManager()),
			],
		),
	]
